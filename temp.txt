def enhance_text_quality(image_path, output_path="enhanced_text.jpg"):
    # Read image
    img = cv2.imread(image_path)
    if img is None:
        raise ValueError("Image not loaded - check path or file format")
    
    # Convert to grayscale
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    
    # 1. Denoising (preserve text edges)
    denoised = cv2.fastNlMeansDenoising(
        gray, None, h=15,  # Increase h for stronger denoising
        templateWindowSize=7,
        searchWindowSize=21
    )
    
    # 2. Contrast enhancement (CLAHE)
    clahe = cv2.createCLAHE(clipLimit=3.0, tileGridSize=(8, 8))
    clahe_img = clahe.apply(denoised)
    
    # 3. Sharpening (unsharp mask)
    blurred = cv2.GaussianBlur(clahe_img, (0, 0), 3)
    sharpened = cv2.addWeighted(clahe_img, 2.5, blurred, -1.5, 0)
    
    # 4. Advanced binarization (Sauvola's method)
    binary = sauvola(sharpened, window_size=25, k=0.2)  # Requires scikit-image
    binary = (sharpened > binary).astype(np.uint8) * 255
    
    # 5. Post-processing (remove small noise)
    kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (2, 2))
    cleaned = cv2.morphologyEx(binary, cv2.MORPH_CLOSE, kernel, iterations=1)
    
    # Save result
    cv2.imwrite(output_path, cleaned)
    return cleaned
