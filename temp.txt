import logging
import sys

def setup_logger(level=logging.DEBUG, log_file="app.log"):
    """
    Configure the root logger with a custom format and handlers.
    
    Args:
        level (int): Logging level (e.g., logging.DEBUG, logging.INFO).
        log_file (str): Path to the log file. Defaults to "app.log".
    """
    # Get the root logger
    logger = logging.getLogger()
    logger.setLevel(level)

    # Remove existing handlers to avoid duplication
    for handler in logger.handlers[:]:
        logger.removeHandler(handler)

    # Create a formatter
    formatter = logging.Formatter(
        '%(asctime)s - %(name)s - %(filename)s - %(levelname)s - %(message)s'
    )

    # Create console handler (logs to sys.stdout)
    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setFormatter(formatter)
    logger.addHandler(console_handler)

    # Create file handler (logs to the specified file)
    file_handler = logging.FileHandler(log_file)
    file_handler.setFormatter(formatter)
    logger.addHandler(file_handler)

import logging
from setup_logger import setup_logger

# Initialize the logger
setup_logger(level=logging.DEBUG, log_file="app.log")

# Create a logger for this module
logger = logging.getLogger(__name__)

def main():
    logger.info("Starting the application...")
    # Your code here

if __name__ == "__main__":
    main()
